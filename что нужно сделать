Словарь (dictionary) - это тип данных, представляющий собой неупорядоченный набор пар ключ:значение. (при этом каждый ключ, в рамках одного словаря, является уникальным).
# литерал словаря в Python, где first_key и second_key - ключи, # а 1 и 2 - соответственно ассоциированные с ними значения {'first_key': 1, 'second_key': 2}
Объявить словарь Python 3 можно несколькими способами. Но сначала рассмотрим наиболее простую ситуацию и создадим пустой словарь:

example_dict = {} print(type(example_dict)) > <class 'dict'>
Теперь объявим и инициализируем словарь из трех элементов через соответствующий литерал и выведем на экран значение третьего элемента:

example_dict_2 = {'keyOne': 'valueFirst', 'keyTwo': 'valueSecond', 'keyThree': 'valueThird'} example_dict_2['keyThree'] > 'valueThird'
Помимо литерального объявления, в Python существует возможность объявлять словари при помощи функции dict():

inventory_dict = dict(right_hand='sword', left_hand='shield') inventory_dict > {'right_hand': 'sword', 'left_hand': 'shield'}
Сортировка словаря
Так как словарь состоит из пар, то и отсортировать его можно, как по ключам, так и по значениям.

Сортировка по ключу
Сортировка по ключам выполняется с использованием функции sorted(). Работает функция так:

statistic_dict = {'b': 13, 'd': 30, 'e': -32, 'c': 93, 'a': 33} for key in sorted(statistic_dict): print(key) > a b с d e
Методы словарей в Python
Перечислим основные словарные методы, которые помогут вам при работе с этим типом данных.

clear() — очищает заданный словарь, приводя его к пустому.
get() — отдаёт значение словаря по указанному ключу. Если ключ не существует, а в качестве дополнительного аргумента передано значение по умолчанию, то метод вернет его. Если же значение по умолчанию опущено, метод вернет None.
items() — возвращает словарные пары ключ:значение, как соответствующие им кортежи.
keys() — возвращает ключи словаря, организованные в виде списка.
values() — подобным образом, возвращает список значений словаря.
pop() — удалит запись словаря по ключу и вернет её значение.
popitem() — выбрасывает пару ключ:значение из словаря и возвращает её в качестве кортежа. Такие пары возвращаются в порядке LIFO.
update() — реализует своеобразную операцию конкатенации для словарей. Он объединяет ключи и значения одного словаря с ключами и значениями другого. При этом если какие-то ключи совпадут, то результирующим значением станет значение словаря, указанного в качестве аргумента метода update.
copy() — создает полную копию исходного словаря.
